{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/jest","result":{"pageContext":{"posts":[{"excerpt":"Running the test suite for the RedwoodJS Framework is pretty straighforward.  followed by  is all that's needed. You will probably see some warnings about missing peer dependencies when installing, but those can safely be ignored. Running all the…","html":"<p>Running the test suite for the RedwoodJS Framework is pretty straighforward. <code class=\"language-text\">yarn install</code> followed by <code class=\"language-text\">yarn test</code> is all that's needed. You will probably see some warnings about missing peer dependencies when installing, but those can safely be ignored.</p>\n<p>Running all the tests takes a little while however, so when working on a specific feature it's somethimes helpful to be able to just run the tests for a specific package, or even just a specific test. So that's what I want to show here.</p>\n<p>Let's say for example you want to run the tests for the <code class=\"language-text\">cli</code> package. First, go in to the cli directory; <code class=\"language-text\">cd packages/cli</code>. Then run all the tests by issuing <code class=\"language-text\">yarn test</code> (or <code class=\"language-text\">yarn jest</code>).</p>\n<p>For more granularity you can run a single test-file by passing the path to it to jest. Here's the command and example output from running the page generator tests.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ yarn test src/commands/generate/page/__tests__/page.test.js\nyarn run v1.22.4\n$ jest src/commands/generate/page/__tests__/page.test.js\n FAIL  src/commands/generate/page/__tests__/page.test.js (5.467s)\n  √ returns exactly 2 files (4ms)\n  × creates a page component (4ms)\n  × creates a page test\n  × creates a page component (1ms)\n  × creates a page test (2ms)\n  √ creates a single-word route name (1ms)\n  √ creates a camelCase route name for multiple word names (1ms)\n  √ creates a path equal to passed path</code></pre></div>\n<p>To run just one of the testcases, open up the test-file in your code editor, find the test definition and add <code class=\"language-text\">.only</code> to it. E.g. changing it from <code class=\"language-text\">test(&#39;creates a page test&#39;, () =&gt; {</code> to <code class=\"language-text\">test.only(&#39;creates a page test&#39;, () =&gt; {</code>. Run the test file again, and only the selected test case will execute. You can add <code class=\"language-text\">.only</code> to however many tests you like, and all the selected tests will run. The other tests in the file will be skipped.</p>\n<p>Example output when selecting three testcases to run</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ yarn test src/commands/generate/page/__tests__/page.test.js\nyarn run v1.22.4\n$ jest src/commands/generate/page/__tests__/page.test.js\n PASS  src/commands/generate/page/__tests__/page.test.js (5.598s)\n  √ creates a page test (3ms)\n  √ creates a page test (1ms)\n  √ creates a page component with a plural word for name\n  ○ skipped returns exactly 2 files\n  ○ skipped creates a page component\n  ○ skipped creates a page component\n  ○ skipped creates a single-word route name\n  ○ skipped creates a camelCase route name for multiple word names\n  ○ skipped creates a path equal to passed path\n\nTest Suites: 1 passed, 1 total\nTests:       6 skipped, 3 passed, 9 total\nSnapshots:   0 total\nTime:        7.306s\nRan all test suites matching /src\\\\commands\\\\generate\\\\page\\\\__tests__\\\\page.test.js/i.\nDone in 9.28s.</code></pre></div>","id":"d380d15b-585c-5f5d-999c-4a190bc2d36a","fields":{"slug":"/2020-06-21/running-specific-tests-redwoodjs/"},"frontmatter":{"date":"2020-06-21","title":"Running specific tests in RedwoodJS core","category":"RedwoodJS","tags":["RedwoodJS","Testing","JavaScript","Jest"],"banner":"/assets/bg/4.jpg"},"timeToRead":2}],"tagName":"Jest"}}}